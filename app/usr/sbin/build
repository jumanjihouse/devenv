#!/bin/sh
set -x
set -eu
set -o pipefail
#
# Docker build calls this script to harden the image during build.
#
# NOTE: To build on CircleCI, you must take care to keep the `find`
# command out of the /proc filesystem to avoid errors like:
#
#    find: /proc/tty/driver: Permission denied
#    lxc-start: The container failed to start.
#    lxc-start: Additional information can be obtained by \
#        setting the --logfile and --logpriority options.


. /etc/package-lists

apk upgrade --no-cache --available

# shellcheck disable=SC2086,SC2154
apk add --no-cache \
    -X http://dl-cdn.alpinelinux.org/alpine/edge/main \
    -X http://dl-cdn.alpinelinux.org/alpine/edge/community \
    -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \
    ${essentials} \
    ${devtools} \
    ${convenience} \
    && :

# Download and install data for geoip.
/etc/periodic/monthly/geoip

# shellcheck disable=SC2086,SC2154
pip install \
    ${pips} \
    && :

(
# Install Bash Automated Test System.
BATS_VER=0.4.0
cd /tmp
curl -sSL -o bats_v${BATS_VER}.tar.gz https://github.com/sstephenson/bats/archive/v${BATS_VER}.tar.gz
tar -xf /tmp/bats_v${BATS_VER}.tar.gz
bats-${BATS_VER}/install.sh /usr/local
rm -fr /tmp/bats*
)

# Install go server spec.
GOSS_VER=0.3.5
curl -sSL -o /usr/bin/goss https://github.com/aelsabbahy/goss/releases/download/v${GOSS_VER}/goss-linux-amd64
chmod 0755 /usr/bin/goss

# Get tmux-bash-completions.
curl -L -o /usr/share/bash-completion/completions/tmux \
https://raw.githubusercontent.com/imomaliev/tmux-bash-completion/master/completions/tmux

adduser -D -s /bin/bash -u 1000 user
sed -i -r 's/^user:!:/user:x:/' /etc/shadow

# Avoid error `Only root may specify -c or -f` when using
# ForceCommand with `-f` option at non-root ssh login.
# https://www.duosecurity.com/docs/duounix-faq#can-i-use-login_duo-to-protect-non-root-shared-accounts,-or-can-i-do-an-install-without-root-privileges?
chmod u-s /usr/sbin/login_duo

# Ensure strict ownership and perms.
chown root:root /usr/bin/github_pubkeys
chmod 0555 /usr/bin/github_pubkeys

# Be informative after successful login.
# shellcheck disable=SC2039
echo -e "\\n\\nApp container image built on $(date).\\n\\n" > /etc/motd

# Improve strength of diffie-hellman-group-exchange-sha256 (Custom DH with SHA2).
# See https://stribika.github.io/2015/01/04/secure-secure-shell.html
#
# Columns in the moduli file are:
# Time Type Tests Tries Size Generator Modulus
#
# This file is provided by the openssh package on Fedora.
moduli=/etc/ssh/moduli
if [ -f ${moduli} ]; then
  cp ${moduli} ${moduli}.orig
  awk '$5 >= 2000' ${moduli}.orig > ${moduli}
  rm -f ${moduli}.orig
fi

# Remove existing crontabs, if any.
rm -fr /var/spool/cron

# Remove world-writable permissions except for /tmp.
find / -xdev -type d -a ! -name tmp -perm /0002 -exec chmod o-w {} +
find / -xdev -type f -perm /0002 -exec chmod o-w {} +

# Remove unnecessary user accounts.
sed -i -r '/^(user|root|sshd)/!d' /etc/group
sed -i -r '/^(user|root|sshd)/!d' /etc/passwd

# Remove interactive login shell for everybody but user.
sed -i -r '/^user:/! s#^(.*):[^:]*$#\1:/sbin/nologin#' /etc/passwd

sysdirs="
  /bin
  /lib
  /sbin
  /usr
"

# Ensure system dirs are owned by root and not writable by anybody else.
# shellcheck disable=SC2086
find $sysdirs -xdev -type d \
  -exec chown root:root {} \; \
  -exec chmod 0755 {} \;

# Remove all suid files.
# shellcheck disable=SC2086
find $sysdirs -xdev -type f -a -perm /4000 -delete

# Remove other programs that could be dangerous.
# shellcheck disable=SC2086
find $sysdirs -xdev \( \
  -name su \
  \) -delete

# Remove init scripts since we do not use them.
rm -fr /etc/init.d
rm -fr /lib/rc

# Remove root homedir since we do not need it.
rm -fr /root

# Remove broken symlinks (because we removed the targets above).
# shellcheck disable=SC2086
find $sysdirs -xdev -type l -exec test ! -e {} \; -delete

# Update databases.
makewhatis
updatedb
